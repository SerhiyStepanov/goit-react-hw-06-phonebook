{"version":3,"sources":["Components/Filter/Filter.module.css","App.module.css","Components/Form/Form.module.css","Components/redux/types.js","Components/redux/reducer.js","Components/redux/store.js","Components/redux/actions.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","combineReducers","items","state","type","payload","types","filter","contact","id","rootReducer","contacts","contactReducer","store","createStore","composeWithDevTools","data","shortid","generate","name","number","contactId","value","connect","dispatch","onSubmit","actions","props","useState","setName","setNumber","inputNameId","inputNumberId","onInputChange","e","target","reset","preventDefault","className","s","container","htmlFor","label","spanName","onChange","input","placeholder","autoComplete","ioIosPhonePortrait","button","normalizedFilter","toLowerCase","includes","getVisibleContacts","inputFilterId","onDeleteContact","contactList","title","map","list","text","onClick","App","style","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e9df239.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__ypZ7k\",\"label\":\"Filter_label__1qeH1\",\"fiSearch\":\"Filter_fiSearch__1Lt4P\",\"input\":\"Filter_input__2w1_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1D8OH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3knRQ\",\"label\":\"Form_label__2GpCA\",\"button\":\"Form_button__-b8Le\",\"ioIosPhonePortrait\":\"Form_ioIosPhonePortrait__36UyP\",\"spanName\":\"Form_spanName__1VK3g\",\"input\":\"Form_input__3pi7D\"};","export default {\r\n  ADD: \"contact/add\",\r\n  DELETE: \"contact/delete\",\r\n  FILTER: \"contact/filter\",\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport types from \"./types\";\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter((contact) => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactReducer from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import shortid from \"shortid\";\r\nimport types from \"./types\";\r\n\r\nconst addContact = (data) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n});\r\n\r\nconst deleteContact = (contactId) => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst filterContacts = (value) => ({\r\n  type: types.FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport default { addContact, deleteContact, filterContacts };\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../redux/actions\";\r\nimport { IoIosPhonePortrait } from \"react-icons/io\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./Form.module.css\";\r\n\r\nfunction ContactForm(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const inputNameId = shortid.generate();\r\n  const inputNumberId = shortid.generate();\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onFormSubmit}>\r\n        <div className={s.container}>\r\n          <label htmlFor={inputNameId} className={s.label}>\r\n            Name <span className={s.spanName}>name</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id={inputNameId}\r\n            value={name}\r\n            onChange={onInputChange}\r\n            className={s.input}\r\n            placeholder=\"Enter name\"\r\n            autoComplete=\"Off\"\r\n          />\r\n        </div>\r\n\r\n        <div className={s.container}>\r\n          <label htmlFor={inputNumberId} className={s.label}>\r\n            Number\r\n            <span className={s.ioIosPhonePortrait}>\r\n              <IoIosPhonePortrait />\r\n            </span>\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id={inputNumberId}\r\n            value={number}\r\n            onChange={onInputChange}\r\n            className={s.input}\r\n            placeholder=\"Enter number\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (data) => dispatch(actions.addContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../redux/actions\";\r\nimport s from \"./Filter.module.css\";\r\n// import { FiSearch } from \"react-icons/fi\";\r\n// import { ReactComponent } from \"*.svg\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  const inputFilterId = shortid.generate();\r\n  return (\r\n    <div className={s.container}>\r\n      <label htmlFor={inputFilterId} className={s.label}>\r\n        Find contacts of name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        id={inputFilterId}\r\n        className={s.input}\r\n        placeholder=\"Enter name please\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter((contact) => {\r\n    return contact.name.toLowerCase().includes(normalizedFilter);\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const visibleContacts = getVisibleContacts(items, filter);\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(actions.filterContacts(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { connect } from \"react-redux\";\r\nimport actions from \"../redux/actions\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      <h4 className={s.title}>Contacts name :</h4>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={s.list}>\r\n          <p className={s.text}>\r\n            {name} : {number}\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (contactId) => dispatch(actions.deleteContact(contactId)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { useEffect, useState } from \"react\";\n// import shortid from \"shortid\";\nimport ContactForm from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  // const [contacts, setContacts] = useState(() => {\n  //   return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n  // });\n  // const [filters, setFilters] = useState(\"\");\n\n  // function addContact(data) {\n  //   const repeatName = contacts.some((el) => el.name === data.name);\n  //   if (repeatName) {\n  //     alert(`${data.name} is alreadi in contacts`);\n  //     return;\n  //   }\n\n  //   if (data.name === \"\") {\n  //     alert(\"Enter  name please\");\n  //     return;\n  //   }\n\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name: data.name,\n  //     number: data.number,\n  //   };\n\n  //   setContacts((state) => [...state, contact]);\n  // }\n\n  // const deleteContact = (contactId) => {\n  //   setContacts(contacts.filter((contact) => contact.id !== contactId));\n  // };\n\n  // const filterContacts = (e) => {\n  //   setFilters(e.target.value);\n  // };\n\n  // const visibleContacts = () => {\n  //   const normalizedFilter = filters.toLowerCase();\n  //   return contacts.filter((contact) => {\n  //     return contact.name.toLowerCase().includes(normalizedFilter);\n  //   });\n  // };\n\n  // const visibleContactsView = visibleContacts();\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // });\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n\n      <ContactForm\n      // onSubmit={addContact}\n      />\n\n      <h2 style={{ color: \"rgb(150, 150, 250)\" }}>Contacts</h2>\n      <Filter\n      // value={filters} onChange={filterContacts}\n      />\n      <ContactList\n      // contacts={visibleContactsView}\n      // onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./Components/redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n// console.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2o3PE\",\"title\":\"ContactList_title__GZaPC\",\"list\":\"ContactList_list__3PXTU\",\"text\":\"ContactList_text__2RHY3\",\"button\":\"ContactList_button__c6ZOV\"};"],"sourceRoot":""}