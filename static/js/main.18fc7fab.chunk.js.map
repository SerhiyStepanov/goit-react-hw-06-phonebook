{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Stats/Stats.module.css","App.module.css","Components/Form/Form.module.css","Components/redux/actions.js","Components/redux/reducer.js","Components/redux/store.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/Stats/Stats.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","shortid","generate","name","number","deleteContact","filterContacts","items","createReducer","actions","state","filter","contact","combineReducers","persistConfig","key","storage","blacklist","rootReducer","contacts","persistReducer","contactReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","connect","dispatch","onSubmit","props","useState","setName","setNumber","inputNameId","inputNumberId","onInputChange","e","target","value","reset","preventDefault","className","s","container","htmlFor","label","spanName","type","onChange","input","placeholder","autoComplete","ioIosPhonePortrait","button","event","inputFilterId","total","length","text","span","normalizedFilter","toLowerCase","item","includes","getVisibleContacts","onDeleteContact","contactId","contactList","map","list","onClick","App","style","color","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.18fc7fab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__ypZ7k\",\"label\":\"Filter_label__1qeH1\",\"fiSearch\":\"Filter_fiSearch__1Lt4P\",\"input\":\"Filter_input__2w1_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Stats_text__3fdDn\",\"span\":\"Stats_span__XhE2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1D8OH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3knRQ\",\"label\":\"Form_label__2GpCA\",\"button\":\"Form_button__-b8Le\",\"ioIosPhonePortrait\":\"Form_ioIosPhonePortrait__36UyP\",\"spanName\":\"Form_spanName__1VK3g\",\"input\":\"Form_input__3pi7D\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n// import types from \"./types\";\r\n\r\nconst addContact = createAction(\"contact/add\", (data) => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name: data.name,\r\n      number: data.number,\r\n    },\r\n  };\r\n});\r\n\r\n// const addContact = (data) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name: data.name,\r\n//     number: data.number,\r\n//   },\r\n// });\r\n\r\nconst deleteContact = createAction(\"contact/delete\");\r\n\r\n// const deleteContact = (contactId) => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\nconst filterContacts = createAction(\"contact/filter\");\r\n\r\n// const filterContacts = (value) => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport default { addContact, deleteContact, filterContacts };\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport actions from \"./actions\";\r\n// import types from \"./types\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filter = createReducer(\"\", {\r\n  [actions.filterContacts]: (state, { payload }) => payload,\r\n});\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactReducer from \"./reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contact\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(persistConfig, contactReducer),\r\n});\r\n\r\n// const rootReducer = combineReducers({\r\n//   reducer: {\r\n//     contacts: persistReducer(persistConfig, contactReducer),\r\n//   },\r\n// });\r\n// const persistedReducer = persistReducer(persistConfig, contactReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../redux/actions\";\r\nimport { IoIosPhonePortrait } from \"react-icons/io\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./Form.module.css\";\r\n\r\nfunction ContactForm(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const inputNameId = shortid.generate();\r\n  const inputNumberId = shortid.generate();\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onFormSubmit}>\r\n        <div className={s.container}>\r\n          <label htmlFor={inputNameId} className={s.label}>\r\n            Name <span className={s.spanName}>name</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id={inputNameId}\r\n            value={name}\r\n            onChange={onInputChange}\r\n            className={s.input}\r\n            placeholder=\"Enter name\"\r\n            autoComplete=\"Off\"\r\n          />\r\n        </div>\r\n\r\n        <div className={s.container}>\r\n          <label htmlFor={inputNumberId} className={s.label}>\r\n            Number\r\n            <span className={s.ioIosPhonePortrait}>\r\n              <IoIosPhonePortrait />\r\n            </span>\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id={inputNumberId}\r\n            value={number}\r\n            onChange={onInputChange}\r\n            className={s.input}\r\n            placeholder=\"Enter number\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (data) => dispatch(actions.addContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../redux/actions\";\r\nimport s from \"./Filter.module.css\";\r\n// import { FiSearch } from \"react-icons/fi\";\r\n// import { ReactComponent } from \"*.svg\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  const inputFilterId = shortid.generate();\r\n  return (\r\n    <div className={s.container}>\r\n      <label htmlFor={inputFilterId} className={s.label}>\r\n        Find contacts of name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        id={inputFilterId}\r\n        className={s.input}\r\n        placeholder=\"Enter name please\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// const getVisibleContacts = (items, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return items.filter((item) => {\r\n//     return item.name.toLowerCase().includes(normalizedFilter);\r\n//   });\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { items, filter } = state.contacts;\r\n//   const visibleContacts = getVisibleContacts(items, filter);\r\n//   return {\r\n//     items: visibleContacts,\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (event) => dispatch(actions.filterContacts(event.target.value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import { connect } from \"react-redux\";\r\nimport s from \"./Stats.module.css\";\r\n\r\nfunction Stats({ total }) {\r\n  return (\r\n    <div>\r\n      <p className={s.text}>\r\n        Total contact : <span className={s.span}>{total}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  total: state.contacts.items.length,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Stats);\r\n","import { connect } from \"react-redux\";\r\nimport actions from \"../redux/actions\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ items, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {items.map(({ name, number, id }) => (\r\n        <li key={id} className={s.list}>\r\n          <p className={s.text}>\r\n            {name} : {number}\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return items.filter((item) => {\r\n    return item.name.toLowerCase().includes(normalizedFilter);\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const visibleContacts = getVisibleContacts(items, filter);\r\n  return {\r\n    items: visibleContacts,\r\n  };\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   items: state.contacts.items,\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (contactId) => dispatch(actions.deleteContact(contactId)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { useEffect, useState } from \"react\";\n// import shortid from \"shortid\";\nimport ContactForm from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport Stats from \"./Components/Stats\";\nimport ContactList from \"./Components/ContactList\";\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  // const [contacts, setContacts] = useState(() => {\n  //   return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n  // });\n  // const [filters, setFilters] = useState(\"\");\n\n  // function addContact(data) {\n  //   const repeatName = contacts.some((el) => el.name === data.name);\n  //   if (repeatName) {\n  //     alert(`${data.name} is alreadi in contacts`);\n  //     return;\n  //   }\n\n  //   if (data.name === \"\") {\n  //     alert(\"Enter  name please\");\n  //     return;\n  //   }\n\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name: data.name,\n  //     number: data.number,\n  //   };\n\n  //   setContacts((state) => [...state, contact]);\n  // }\n\n  // const deleteContact = (contactId) => {\n  //   setContacts(contacts.filter((contact) => contact.id !== contactId));\n  // };\n\n  // const filterContacts = (e) => {\n  //   setFilters(e.target.value);\n  // };\n\n  // const visibleContacts = () => {\n  //   const normalizedFilter = filters.toLowerCase();\n  //   return contacts.filter((contact) => {\n  //     return contact.name.toLowerCase().includes(normalizedFilter);\n  //   });\n  // };\n\n  // const visibleContactsView = visibleContacts();\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // });\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n\n      <ContactForm\n      // onSubmit={addContact}\n      />\n\n      <h2 style={{ color: \"rgb(150, 150, 250)\" }}>Contacts</h2>\n      <Filter\n      // value={filters} onChange={filterContacts}\n      />\n      <Stats />\n      <ContactList\n      // contacts={visibleContactsView}\n      // onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./Components/redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2o3PE\",\"title\":\"ContactList_title__GZaPC\",\"list\":\"ContactList_list__3PXTU\",\"text\":\"ContactList_text__2RHY3\",\"button\":\"ContactList_button__c6ZOV\"};"],"sourceRoot":""}